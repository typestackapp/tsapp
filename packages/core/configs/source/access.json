{
    "ACTIVE": {
        "Auth": {
            "use": {
                "info": [ "Handle Authentification via trpc" ]
            },
            "app": {
                "info": [ "Returns app data" ],
                "auth": { "tokens": ["Bearer", "Cookie"] }
            },
            "grant": {
                "info": [
                    "User grants access to external app",
                    "User is redirected to external apps callback",
                    "External app can retreive token by using tokenAuthorizationCode"
                ],
                "auth": { "tokens": ["Bearer"] }
            },
            "authorize": {
                "info": [
                    "Authorize external app to access user data",
                    "User is redirected to external apps callback",
                    "External app can retreive token by using tokenAuthorizationCode"
                ],
                "auth": { "tokens": ["Bearer"] }
            },
            "callback": {
                "info": [
                    "User is redirected to this endpoint to add new token to user tokens",
                    "Token can be added from internal app or external app",
                    "Token retrival is handled by auth client"
                ],
                "auth": { "tokens": ["Bearer"] }
            },
            "revoke": {
                "info": [ 
                    "User can revoke session token by providing Authorization Bearer header",
                    "User can revoke external app token by providing Authorization Bearer header and token_id"
                ],
                "auth": { "tokens": ["Bearer"] }
            },
            "tokenPassword": {
                "info": [
                    "User can retreive new token by providing Basic auth",
                    "Header should be set liek this Authorization: Basic base64(email:psw)"
                ],
                "auth": { "tokens": ["Basic"] }
            },
            "tokenSession": {
                "info": [ "For user return new refresh and access token from session cookie" ]
            },
            "tokenAuthorizationCode": {
                "info": [ "For external app grant user token by providing app secret id and token id(code)" ]
            },
            "tokenRefreshToken": {
                "info": [ "For external app grant new toke" ]
            }
        },
        "User": {
            "AccountApp": {
                "admin": {
                    "app": "@typestackapp/core/components/user/account",
                    "title": "My Account"
                }
            },
            "getCurrentUser": {
                "info": [ "Allows user to get current token holder user data" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Read" }
            },
            "getUser": {
                "info": [ "Allows user to get any user data by providing user id" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Read" }
            },
            "getUserRole": {
                "info": [ "Allows user to get users role" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Read" }
            }
        },
        "Access": {
            "getAllAccessConfigs": {
                "info": [ "Allows user to get all access configs" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Read" }
            }
        },
        "Config": {
            "searchConfigs": {
                "info": [ "Allows user to search for configs with Read permission" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Read" },
                "model": { "mongoose": "@typestackapp/core/models/config" }
            },
            "getConfig": {
                "info": [ "Allows user to get config with Read permission by providing config id" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Read" },
                "model": { "mongoose": "@typestackapp/core/models/config" }
            }
        },
        "RoleConfig": {
            "RoleManagerApp": {
                "admin": {
                    "app": "@typestackapp/core/components/user/role",
                    "title": "Role Manager"
                }
            },
            "getAllRoles": {
                "info": [ "Allows user to get all roles" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Read" }
            },
            "upsertRole": {
                "info": [ "Allows user to insert or update role" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Write" }
            },
            "deleteRole": {
                "info": [ "Allows user to remove role" ],
                "auth": { "tokens": ["Bearer", "Cookie"], "permission": "Delete" }
            }
        },
        "Job": {
            "searchJobs": {
                "info": [ "Allows user to search for jobs with Read permission" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Read" },
                "model": { "mongoose": "@typestackapp/core/models/job" }
            },
            "getJob": {
                "info": [ "Allows user to read job with Read permission by providing job id" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Read" },
                "model": { "mongoose": "@typestackapp/core/models/job" }
            },
            "createJob":{
                "info": [ "Allows user to create new job with Write permission" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Write" },
                "model": { "mongoose": "@typestackapp/core/models/job" }
            },
            "updateJob": {
                "info": [ "Allows user to update job with Update permission" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Update" },
                "model": { "mongoose": "@typestackapp/core/models/job" }
            },
            "deleteJob": {
                "info": [ "Allows user to delete job with Delete permission" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Delete" },
                "model": { "mongoose": "@typestackapp/core/models/job" }
            }
        },
        "MessagingCampaign": {
            "createMessagingCampaignJob": {
                "info": [ "Allows user to create new MessagingCampaign job via EXPRESS API" ],
                "auth": { "tokens": ["Bearer", "Cookie", "ApiKey"], "permission": "Write" }
            }
        },
        "Country": {
            "getCountry": {},
            "searchCountry": {},
            "searchTimezone": {}
        }
    }
}