services:
  tsapp:
    depends_on:
      - mongo
      - rabbitmq
      - certbot
      - haproxy
    image: typestackapp/tsapp:latest
    build:
      context: ./
      dockerfile: ./Dockerfile.${@ALIAS}.tsapp
    restart: always
    env_file: ${@ENV_DEFAULTS}
    networks:
      default_network:
        ipv4_address: ${TSAPP_IP}
    volumes: ${TSAPP_VOLUME}
    ports:
      - "${TSAPP_NEXT_PORT}:80"       # HTTP NEXT
      - "${TSAPP_API_PORT}:8000"      # HTTP API
      - "${TSAPP_GRAPHQL_PORT}:8002"  # HTTP GRAPHQL
    entrypoint: /tsapp/packages/${@ALIAS}/bin/tsapp.sh

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_NAME: ${MONGO_INITDB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_KEY_PATH: ${MONGO_KEY_PATH}
      MONGO_BIND_IP: ${MONGO_BIND_IP}
      MONGO_DB_PATH: ${MONGO_DB_PATH}
    networks:
      default_network:
        ipv4_address: ${MONGO_IP}
    volumes:
      - mongo-db:/data/db/
      - ../packages/${@ALIAS}/bin/:/scripts/
      - ../packages/${@ALIAS}/configs/mongo/:/configs/mongo/
    entrypoint: /scripts/mongo.sh
    ports:
      - ${MONGO_PORT}:27017 # Expose DB for host

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      default_network:
        ipv4_address: ${RABBITMQ_IP}
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq/

  certbot:
    image: certbot/certbot:latest
    restart: always
    environment:
      - TSAPP_DOMAIN_NAME=${TSAPP_DOMAIN_NAME}
      - CERTBOT_SELFSIGNED=${CERTBOT_SELFSIGNED}
      - CERTBOT_INIT=${CERTBOT_INIT}
      - CERTBOT_EXTRA_DOMAIN_NAMES=${CERTBOT_EXTRA_DOMAIN_NAMES}
      - CERTBOT_RESTART_TIME=${CERTBOT_RESTART_TIME}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    networks:
      default_network:
        ipv4_address: ${CERTBOT_IP}
    volumes:
      - ../packages/${@ALIAS}/configs/certbot/nginx.conf:/etc/nginx/nginx.conf
      - ../packages/${@ALIAS}/configs/haproxy/wk/:/var/www/wk/
      - ../packages/${@ALIAS}/configs/haproxy/ssl/:/home/ssl/
      - ../packages/${@ALIAS}/configs/letsencrypt/:/etc/letsencrypt/
      - ../packages/${@ALIAS}/logs/certbot/:/etc/nginx/logs/
      - ../packages/${@ALIAS}/logs/letsencrypt/:/var/log/letsencrypt/
      - ../packages/${@ALIAS}/bin/certbot.sh:/home/scripts/certbot.sh
    entrypoint: /home/scripts/certbot.sh
    ports:
      - "${CERTBOT_PORT}:80" # CERTBOT HTTP

  haproxy:
    depends_on:
      - certbot
    mem_limit: 3g
    image: haproxy:2.9.6
    restart: always
    user: root
    env_file: ${@ENV_DEFAULTS}
    networks:
      default_network:
        ipv4_address: ${HAPROXY_IP}
    volumes:
      - ../packages/${@ALIAS}/codegen/haproxy/proxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ../packages/${@ALIAS}/logs/haproxy/:/var/log/
      - ../packages/${@ALIAS}/configs/haproxy/ssl/:/home/ssl/
      - ../packages/${@ALIAS}/bin/haproxy.sh:/home/scripts/haproxy.sh
    entrypoint: /home/scripts/haproxy.sh
    ports: ${HAPROXY_PORT}